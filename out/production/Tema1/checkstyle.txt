Starting audit...
[ERROR] /home/mihai/workspace/Tema1/src/main/Deflect.java:16:20: Parameter currentHero should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Deflect.java:27:5: Class 'Deflect' looks like designed for extension (can be subclassed), but the method 'levelUp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deflect' final or making the method 'levelUp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Deflect.java:36:5: Class 'Deflect' looks like designed for extension (can be subclassed), but the method 'returnPureDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deflect' final or making the method 'returnPureDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Deflect.java:36:35: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Deflect.java:40:5: Class 'Deflect' looks like designed for extension (can be subclassed), but the method 'action' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deflect' final or making the method 'action' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Deflect.java:40:24: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Deflect.java:40:40: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Deflect.java:64:40: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Deflect.java:64:56: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Execute.java:4:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/mihai/workspace/Tema1/src/main/Execute.java:19:24: Parameter currentHero should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Execute.java:31:9: Class 'Execute' looks like designed for extension (can be subclassed), but the method 'levelUp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Execute' final or making the method 'levelUp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Execute.java:38:9: Class 'Execute' looks like designed for extension (can be subclassed), but the method 'returnPureDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Execute' final or making the method 'returnPureDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Execute.java:38:39: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Execute.java:46:9: Class 'Execute' looks like designed for extension (can be subclassed), but the method 'action' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Execute' final or making the method 'action' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Execute.java:46:28: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Execute.java:46:44: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Execute.java:51: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] /home/mihai/workspace/Tema1/src/main/Execute.java:56:44: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Execute.java:56:60: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Pyromancer.java:4:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/mihai/workspace/Tema1/src/main/Pyromancer.java:7:27: Parameter positionX should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Pyromancer.java:7:42: Parameter positionY should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Pyromancer.java:9: Line has trailing spaces. [RegexpSingleline]
[ERROR] /home/mihai/workspace/Tema1/src/main/Pyromancer.java:10:32: '500' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema1/src/main/Pyromancer.java:11:42: '50' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema1/src/main/Pyromancer.java:13:49: '0.25' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema1/src/main/Pyromancer.java:15: Line has trailing spaces. [RegexpSingleline]
[ERROR] /home/mihai/workspace/Tema1/src/main/Pyromancer.java:19: Line has trailing spaces. [RegexpSingleline]
[ERROR] /home/mihai/workspace/Tema1/src/main/Pyromancer.java:20:9: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Pyromancer.java:21:28: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Pyromancer.java:21:44: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Pyromancer.java:26:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'levelUp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'levelUp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Pyromancer.java:33:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'returnDamageWithoutModifiers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'returnDamageWithoutModifiers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Pyromancer.java:34:47: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Paralysis.java:19:22: Parameter currentHero should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Paralysis.java:32:5: Class 'Paralysis' looks like designed for extension (can be subclassed), but the method 'levelUp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Paralysis' final or making the method 'levelUp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Paralysis.java:37:5: Class 'Paralysis' looks like designed for extension (can be subclassed), but the method 'action' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Paralysis' final or making the method 'action' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Paralysis.java:37:24: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Paralysis.java:37:40: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Paralysis.java:38: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /home/mihai/workspace/Tema1/src/main/Paralysis.java:46:5: Class 'Paralysis' looks like designed for extension (can be subclassed), but the method 'returnPureDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Paralysis' final or making the method 'returnPureDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Paralysis.java:46:35: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Paralysis.java:54:5: Class 'Paralysis' looks like designed for extension (can be subclassed), but the method 'executeOvertimeAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Paralysis' final or making the method 'executeOvertimeAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Paralysis.java:54:40: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Paralysis.java:54:56: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Paralysis.java:55: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] /home/mihai/workspace/Tema1/src/main/Slam.java:4:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/mihai/workspace/Tema1/src/main/Slam.java:9:21: Parameter currentHero should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Slam.java:11:26: '100' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema1/src/main/Slam.java:12:34: '40' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema1/src/main/Slam.java:14:50: '-0.20' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema1/src/main/Slam.java:15:51: '0.20' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema1/src/main/Slam.java:16:55: '-0.10' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema1/src/main/Slam.java:17:51: '0.05' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema1/src/main/Slam.java:20:9: Class 'Slam' looks like designed for extension (can be subclassed), but the method 'levelUp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Slam' final or making the method 'levelUp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Slam.java:24:9: Class 'Slam' looks like designed for extension (can be subclassed), but the method 'action' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Slam' final or making the method 'action' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Slam.java:24:28: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Slam.java:24:44: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Slam.java:25: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] /home/mihai/workspace/Tema1/src/main/Slam.java:29:9: Class 'Slam' looks like designed for extension (can be subclassed), but the method 'returnPureDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Slam' final or making the method 'returnPureDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Slam.java:29:39: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Slam.java:37:9: Class 'Slam' looks like designed for extension (can be subclassed), but the method 'executeOvertimeAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Slam' final or making the method 'executeOvertimeAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Slam.java:37:44: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Slam.java:37:60: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Drain.java:15:18: Parameter currentHero should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Drain.java:26:5: Class 'Drain' looks like designed for extension (can be subclassed), but the method 'levelUp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Drain' final or making the method 'levelUp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Drain.java:32:5: Class 'Drain' looks like designed for extension (can be subclassed), but the method 'action' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Drain' final or making the method 'action' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Drain.java:32:24: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Drain.java:32:40: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Drain.java:50:67: '*' should be on a new line. [OperatorWrap]
[ERROR] /home/mihai/workspace/Tema1/src/main/Drain.java:51:26: '0.3' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema1/src/main/Drain.java:55:5: Class 'Drain' looks like designed for extension (can be subclassed), but the method 'returnPureDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Drain' final or making the method 'returnPureDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Drain.java:56:35: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Drain.java:60:40: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Drain.java:60:56: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Main.java:12:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/mihai/workspace/Tema1/src/main/Main.java:14:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/mihai/workspace/Tema1/src/main/Main.java:14:33: Parameter args should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Rogue.java:7:18: Parameter positionX should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Rogue.java:7:33: Parameter positionY should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Rogue.java:10:24: '600' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema1/src/main/Rogue.java:11:34: '40' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema1/src/main/Rogue.java:13:41: '0.15' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema1/src/main/Rogue.java:20:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Rogue.java:20:24: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Rogue.java:20:40: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Rogue.java:25:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'levelUp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'levelUp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Rogue.java:32:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'returnDamageWithoutModifiers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'returnDamageWithoutModifiers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Rogue.java:33:47: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Rogue.java:37:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'roundPassed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'roundPassed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Backstab.java:18:21: Parameter currentHero should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Backstab.java:30:5: Class 'Backstab' looks like designed for extension (can be subclassed), but the method 'levelUp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Backstab' final or making the method 'levelUp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Backstab.java:34:5: Class 'Backstab' looks like designed for extension (can be subclassed), but the method 'action' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Backstab' final or making the method 'action' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Backstab.java:34:24: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Backstab.java:34:40: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Backstab.java:37:26: '3' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema1/src/main/Backstab.java:38:39: '0.5' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema1/src/main/Backstab.java:41: Line is longer than 100 characters (found 116). [LineLength]
[ERROR] /home/mihai/workspace/Tema1/src/main/Backstab.java:44: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] /home/mihai/workspace/Tema1/src/main/Backstab.java:48:5: Class 'Backstab' looks like designed for extension (can be subclassed), but the method 'increaseChance' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Backstab' final or making the method 'increaseChance' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Backstab.java:52:5: Class 'Backstab' looks like designed for extension (can be subclassed), but the method 'returnPureDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Backstab' final or making the method 'returnPureDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Backstab.java:52:35: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Backstab.java:54:22: '3' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema1/src/main/Backstab.java:55:35: '0.5' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema1/src/main/Backstab.java:63:40: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Backstab.java:63:56: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Modifier.java:4:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/mihai/workspace/Tema1/src/main/Modifier.java:9:9: Class 'Modifier' looks like designed for extension (can be subclassed), but the method 'getModfierRogue' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Modifier' final or making the method 'getModfierRogue' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Modifier.java:13:9: Class 'Modifier' looks like designed for extension (can be subclassed), but the method 'setModfierRogue' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Modifier' final or making the method 'setModfierRogue' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Modifier.java:13:37: Parameter modfierRogue should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Modifier.java:17:9: Class 'Modifier' looks like designed for extension (can be subclassed), but the method 'getModfierKnight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Modifier' final or making the method 'getModfierKnight' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Modifier.java:21:9: Class 'Modifier' looks like designed for extension (can be subclassed), but the method 'setModfierKnight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Modifier' final or making the method 'setModfierKnight' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Modifier.java:21:38: Parameter modfierKnight should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Modifier.java:25:9: Class 'Modifier' looks like designed for extension (can be subclassed), but the method 'getModfierPyromancer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Modifier' final or making the method 'getModfierPyromancer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Modifier.java:29:9: Class 'Modifier' looks like designed for extension (can be subclassed), but the method 'setModfierPyromancer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Modifier' final or making the method 'setModfierPyromancer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Modifier.java:29:42: Parameter modfierPyromancer should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Modifier.java:33:9: Class 'Modifier' looks like designed for extension (can be subclassed), but the method 'getModfierWizard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Modifier' final or making the method 'getModfierWizard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Modifier.java:37:9: Class 'Modifier' looks like designed for extension (can be subclassed), but the method 'setModfierWizard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Modifier' final or making the method 'setModfierWizard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Modifier.java:37:38: Parameter modfierWizard should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Game.java:6:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/mihai/workspace/Tema1/src/main/Game.java:10:21: Parameter map should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Game.java:10:30: Parameter heroList should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Game.java:10:56: Parameter moves should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Game.java:16:47: Parameter first should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Game.java:16:59: Parameter second should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Game.java:17: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] /home/mihai/workspace/Tema1/src/main/Game.java:24:28: Parameter first should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Game.java:24:40: Parameter second should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Game.java:24:53: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Game.java:29:47: '200' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema1/src/main/Game.java:29:94: '40' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema1/src/main/Game.java:31:38: '200' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema1/src/main/Game.java:31:85: '40' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema1/src/main/Game.java:35:9: Class 'Game' looks like designed for extension (can be subclassed), but the method 'startTheBattles' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'startTheBattles' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Game.java:49: Line is longer than 100 characters (found 136). [LineLength]
[ERROR] /home/mihai/workspace/Tema1/src/main/Game.java:55:9: Class 'Game' looks like designed for extension (can be subclassed), but the method 'play' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'play' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Map.java:9:16: Parameter rows should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Map.java:9:26: Parameter colomns should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Map.java:15:5: Class 'Map' looks like designed for extension (can be subclassed), but the method 'insertElement' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Map' final or making the method 'insertElement' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Map.java:15:31: Parameter value should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Map.java:15:43: Parameter rowPos should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Map.java:15:55: Parameter colPos should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Map.java:19:5: Class 'Map' looks like designed for extension (can be subclassed), but the method 'getElement' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Map' final or making the method 'getElement' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Map.java:19:28: Parameter rowPos should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Map.java:19:40: Parameter colPos should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Wizard.java:4:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/mihai/workspace/Tema1/src/main/Wizard.java:6: Line has trailing spaces. [RegexpSingleline]
[ERROR] /home/mihai/workspace/Tema1/src/main/Wizard.java:7:23: Parameter positionX should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Wizard.java:7:38: Parameter positionY should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Wizard.java:9: Line has trailing spaces. [RegexpSingleline]
[ERROR] /home/mihai/workspace/Tema1/src/main/Wizard.java:10:32: '400' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema1/src/main/Wizard.java:11:42: '30' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema1/src/main/Wizard.java:14:49: '0.10' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema1/src/main/Wizard.java:18: Line has trailing spaces. [RegexpSingleline]
[ERROR] /home/mihai/workspace/Tema1/src/main/Wizard.java:21:9: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Wizard.java:21:28: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Wizard.java:21:44: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Wizard.java:23:42: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/mihai/workspace/Tema1/src/main/Wizard.java:26:9: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'levelUp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'levelUp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Wizard.java:33:9: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'returnDamageWithoutModifiers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'returnDamageWithoutModifiers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Wizard.java:34:51: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Fireblast.java:4:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/mihai/workspace/Tema1/src/main/Fireblast.java:15:26: Parameter currentHero should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Fireblast.java:26:9: Class 'Fireblast' looks like designed for extension (can be subclassed), but the method 'levelUp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Fireblast' final or making the method 'levelUp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Fireblast.java:30:9: Class 'Fireblast' looks like designed for extension (can be subclassed), but the method 'action' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Fireblast' final or making the method 'action' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Fireblast.java:30:28: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Fireblast.java:30:44: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Fireblast.java:31: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] /home/mihai/workspace/Tema1/src/main/Fireblast.java:34:9: Class 'Fireblast' looks like designed for extension (can be subclassed), but the method 'returnPureDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Fireblast' final or making the method 'returnPureDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Fireblast.java:34:39: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Fireblast.java:42:44: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Fireblast.java:42:60: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:5:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:22: Line has trailing spaces. [RegexpSingleline]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:23:21: Parameter positionX should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:23:36: Parameter positionY should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:31:24: '250' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:31:30: '50' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:33: Line has trailing spaces. [RegexpSingleline]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:34:9: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'resetHP' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'resetHP' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:38: Line has trailing spaces. [RegexpSingleline]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:39:9: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'levelUp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'levelUp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:43: Line has trailing spaces. [RegexpSingleline]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:44:9: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'gainXP' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'gainXP' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:44:28: Parameter xpGained should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:46: Line has trailing spaces. [RegexpSingleline]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:53:9: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getTotalHP' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getTotalHP' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:57:9: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getCurrentHP' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getCurrentHP' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:61: Line has trailing spaces. [RegexpSingleline]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:62:9: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'setInitialHP' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'setInitialHP' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:65: Line has trailing spaces. [RegexpSingleline]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:67: Line has trailing spaces. [RegexpSingleline]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:68:9: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'isDead' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'isDead' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:75:9: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getPositionX' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getPositionX' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:79:9: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getPositionY' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getPositionY' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:83:9: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'moveUp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'moveUp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:87:9: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'moveDown' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'moveDown' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:91:9: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'moveRight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'moveRight' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:95:9: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'moveLeft' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'moveLeft' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:99:9: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'setOvertimeAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'setOvertimeAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:99:40: Parameter overtimeAbility should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:99:48: 'overtimeAbility' hides a field. [HiddenField]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:99:65: Parameter numberOfRounds should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:105:9: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'executeOvertimeAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'executeOvertimeAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:105:44: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:114:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'setImmobilized' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'setImmobilized' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:114:32: Parameter immobilized should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:118:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'isImmobilized' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'isImmobilized' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:122:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'receivesDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'receivesDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:122:32: Parameter damageTaken should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:126: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:126:9: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'returnDamageWithModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'returnDamageWithModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:126:45: Parameter damage should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:126:57: Parameter modifier should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:126:76: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:126:90: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:135: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:147:9: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getTerrainPreferred' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getTerrainPreferred' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:151:9: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'output' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'output' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:154: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:160: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:166: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:172: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:179:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getLevel' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getLevel' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:183:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'returnDamageWithoutModifiers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'returnDamageWithoutModifiers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Hero.java:183:47: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Ignite.java:4:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/mihai/workspace/Tema1/src/main/Ignite.java:19:23: Parameter currentHero should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Ignite.java:32:9: Class 'Ignite' looks like designed for extension (can be subclassed), but the method 'levelUp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ignite' final or making the method 'levelUp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Ignite.java:37:9: Class 'Ignite' looks like designed for extension (can be subclassed), but the method 'action' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ignite' final or making the method 'action' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Ignite.java:37:28: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Ignite.java:37:44: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Ignite.java:38: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] /home/mihai/workspace/Tema1/src/main/Ignite.java:42:9: Class 'Ignite' looks like designed for extension (can be subclassed), but the method 'returnPureDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ignite' final or making the method 'returnPureDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Ignite.java:42:39: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Ignite.java:50:9: Class 'Ignite' looks like designed for extension (can be subclassed), but the method 'executeOvertimeAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ignite' final or making the method 'executeOvertimeAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Ignite.java:50:44: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Ignite.java:50:60: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Ignite.java:51: Line is longer than 100 characters (found 125). [LineLength]
[ERROR] /home/mihai/workspace/Tema1/src/main/Knight.java:4:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/mihai/workspace/Tema1/src/main/Knight.java:6: Line has trailing spaces. [RegexpSingleline]
[ERROR] /home/mihai/workspace/Tema1/src/main/Knight.java:10: Line has trailing spaces. [RegexpSingleline]
[ERROR] /home/mihai/workspace/Tema1/src/main/Knight.java:11:23: Parameter positionX should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Knight.java:11:38: Parameter positionY should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Knight.java:13: Line has trailing spaces. [RegexpSingleline]
[ERROR] /home/mihai/workspace/Tema1/src/main/Knight.java:14:32: '900' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema1/src/main/Knight.java:15:42: '80' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema1/src/main/Knight.java:18:49: '0.15' is a magic number. [MagicNumber]
[ERROR] /home/mihai/workspace/Tema1/src/main/Knight.java:23: Line has trailing spaces. [RegexpSingleline]
[ERROR] /home/mihai/workspace/Tema1/src/main/Knight.java:24:9: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Knight.java:25:28: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Knight.java:25:44: Parameter terrain should be final. [FinalParameters]
[ERROR] /home/mihai/workspace/Tema1/src/main/Knight.java:30:9: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'levelUp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'levelUp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Knight.java:37:9: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'returnDamageWithoutModifiers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'returnDamageWithoutModifiers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihai/workspace/Tema1/src/main/Knight.java:38:51: Parameter terrain should be final. [FinalParameters]
Audit done.
Checkstyle ends with 256 errors.
